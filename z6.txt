import java.util.ArrayList;

class Produkt {
    String nazwa;
    double cena;
    int iloscNaMagazynie;

    void wyswietlInformacje() {
        System.out.println("Nazwa produktu: " + nazwa + "\n Cena produktu: " + cena + "\n Ilosc produktu: " + iloscNaMagazynie);
    }
    void dodajDoMagazynu(int ilosc) {
        iloscNaMagazynie += ilosc;
    }
    void usunZMagazynu(int ilosc) {
        if(iloscNaMagazynie > ilosc) {
            iloscNaMagazynie -= ilosc;
        }
        else{
            System.out.println("Niewystarczajaca ilosc produktu aby odjac");
        }
    }
}

class koszykZakupowy {
    ArrayList<Produkt> rzecz = new ArrayList<>();
    void dodajProdukt(Produkt thing, int ilosc) {
        if(thing.iloscNaMagazynie < ilosc) {
            System.out.println("Niewystarczajaca ilosc produktu na magazynie");
        }
        else{
            Produkt temp = new Produkt();
            thing.iloscNaMagazynie -= ilosc;
            temp = thing;
            rzecz.add(temp);
        }
    }
    void wyswietlZawartoscKoszyka() {
        for(Produkt thing : rzecz) {
            if(thing.nazwa != null) {
                System.out.println("Nazwa: " + thing.nazwa);
                System.out.println("Cena: " + thing.cena);
                System.out.println("Ilosc pozostala: " + thing.iloscNaMagazynie);
            }
        }
    }
    double obliczCalkowitaWartosc() {
        double suma = 0;
        for(Produkt thing : rzecz) {
            if(thing.nazwa != null) {
                suma += thing.cena;
            }
        }
        return suma;
    }
}
class Platnosc {
    double kwota;
    String statusPlatnosci;
    public Platnosc(double kwota, String statusPlatnosci) {
        this.kwota = kwota;
        this.statusPlatnosci = statusPlatnosci;
    }
    void zaplac() {
        statusPlatnosci = "Oplacone";
        kwota = 0;
    }
}

class Zamowienie {
    koszykZakupowy koszyk = new koszykZakupowy();
    String statusZamowienia;
    Platnosc platnosc;
    public Zamowienie(koszykZakupowy koszyk, String status) {
        this.koszyk = koszyk;
        this.statusZamowienia = status;
        platnosc = new Platnosc(koszyk.obliczCalkowitaWartosc(), "nieoplacone");
    }
    void ustawStatusZamowienia(String status) {
        statusZamowienia = status;
    }
    void wyswietlZamowienie() {
        System.out.println("Zamowienie:");
        koszyk.wyswietlZawartoscKoszyka();
        System.out.println("Status realizacji zamowienia: " + statusZamowienia);
    }
    void finalizujZamowienie() {
        if(platnosc.statusPlatnosci.equals("Oplacone")) {
            statusZamowienia = "Gotowe do wysylki";
        }
    }
    void zwrocProdukt(Produkt produkt, int ilosc) {
        produkt.iloscNaMagazynie += ilosc;
        koszyk.rzecz.remove(produkt);
    }
}

class Klient {
    String imie;
    String nazwisko;
    ArrayList<Zamowienie> listaZamowien = new ArrayList<>();
    public Klient(String imie, String nazwisko) {
        this.imie = imie;
        this.nazwisko = nazwisko;
    }
    void dodajZamowienie(Zamowienie order) {
        listaZamowien.add(order);
    }
    void wyswietlHistorieZamowien() {
        System.out.println("Historia zamowien dla " + imie + " " + nazwisko);
        for(Zamowienie order : listaZamowien) {
            order.wyswietlZamowienie();
        }
    }
    double obliczLacznyKosztZamowien() {
        double suma = 0;
        for(Zamowienie order : listaZamowien) {
            suma += order.koszyk.obliczCalkowitaWartosc();
        }
        return suma;
    }
}

class Sklep {
    ArrayList<Produkt> produkty = new ArrayList<>();
    void dodajProdukt(Produkt produkt) {
        produkty.add(produkt);
    }
    void wyswietlOferty() {
        for(Produkt produkt : produkty) {
            if(produkt.nazwa != null) {
                System.out.println("Nazwa produktu: " + produkt.nazwa);
                System.out.println("Cena: " + produkt.cena);
                System.out.println("Ilosc w magazynie: " + produkt.iloscNaMagazynie);
            }
        }
    }
    Produkt wyszukajProdukt(String nazwa) {
        for(Produkt produkt : produkty) {
            if(produkt.nazwa.equals(nazwa)) {
                return produkt;
            }
        }
        return null;
    }
    void zakupy(Produkt produkt, int ilosc) {
        koszykZakupowy koszyk = new koszykZakupowy();
        koszyk.dodajProdukt(produkt, ilosc);
    }
}


public class Main {
    public static void main(String[] args) {
        Produkt grzyb = new Produkt();
        grzyb.nazwa = "prawdziwy";
        grzyb.cena = 5.99;
        grzyb.iloscNaMagazynie = 1000;
//        grzyb.wyswietlInformacje();
//        grzyb.dodajDoMagazynu(999);
//        grzyb.wyswietlInformacje();
//        grzyb.usunZMagazynu(999);
//        grzyb.wyswietlInformacje();
//        grzyb.usunZMagazynu(99999999);
        koszykZakupowy koszyk = new koszykZakupowy();
        koszyk.dodajProdukt(grzyb, 5);
//        koszyk.wyswietlZawartoscKoszyka();
        Produkt grzyb2 = new Produkt();
        grzyb2.nazwa = "falszywy";
        grzyb2.cena = 100.00;
        grzyb2.iloscNaMagazynie = 10;
        koszyk.dodajProdukt(grzyb2, 10);
//        koszyk.wyswietlZawartoscKoszyka();
//        System.out.println(koszyk.obliczCalkowitaWartosc());
        Zamowienie zamowienie1 = new Zamowienie(koszyk, "w trakcie realizacji");
//        zamowienie1.wyswietlZamowienie();
        Klient kamil = new Klient("Kamil", "Steinbach");
        kamil.dodajZamowienie(zamowienie1);
        kamil.wyswietlHistorieZamowien();
        System.out.print(kamil.obliczLacznyKosztZamowien());
    }
}